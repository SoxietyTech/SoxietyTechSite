/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-amber-700: oklch(55.5% 0.163 48.998);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-stone-900: oklch(21.6% 0.006 56.043);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-auto {
    margin: auto;
  }
  .mx-auto {
    margin-inline: auto;
  }
  .-mt-20 {
    margin-top: calc(var(--spacing) * -20);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-11 {
    margin-top: calc(var(--spacing) * 11);
  }
  .mt-15 {
    margin-top: calc(var(--spacing) * 15);
  }
  .mt-20 {
    margin-top: calc(var(--spacing) * 20);
  }
  .mt-25 {
    margin-top: calc(var(--spacing) * 25);
  }
  .mt-40 {
    margin-top: calc(var(--spacing) * 40);
  }
  .mt-50 {
    margin-top: calc(var(--spacing) * 50);
  }
  .mt-130 {
    margin-top: calc(var(--spacing) * 130);
  }
  .mt-400 {
    margin-top: calc(var(--spacing) * 400);
  }
  .mr-0 {
    margin-right: calc(var(--spacing) * 0);
  }
  .mr-30 {
    margin-right: calc(var(--spacing) * 30);
  }
  .mr-100 {
    margin-right: calc(var(--spacing) * 100);
  }
  .mr-auto {
    margin-right: auto;
  }
  .mb-15 {
    margin-bottom: calc(var(--spacing) * 15);
  }
  .mb-25 {
    margin-bottom: calc(var(--spacing) * 25);
  }
  .mb-30 {
    margin-bottom: calc(var(--spacing) * 30);
  }
  .ml-0 {
    margin-left: calc(var(--spacing) * 0);
  }
  .ml-20 {
    margin-left: calc(var(--spacing) * 20);
  }
  .ml-40 {
    margin-left: calc(var(--spacing) * 40);
  }
  .ml-50 {
    margin-left: calc(var(--spacing) * 50);
  }
  .ml-100 {
    margin-left: calc(var(--spacing) * 100);
  }
  .ml-400 {
    margin-left: calc(var(--spacing) * 400);
  }
  .ml-\[200px\] {
    margin-left: 200px;
  }
  .ml-\[300px\] {
    margin-left: 300px;
  }
  .ml-\[640px\] {
    margin-left: 640px;
  }
  .ml-\[1000px\] {
    margin-left: 1000px;
  }
  .ml-auto {
    margin-left: auto;
  }
  .box-border {
    box-sizing: border-box;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .inline-block {
    display: inline-block;
  }
  .h-3\/5 {
    height: calc(3/5 * 100%);
  }
  .h-4000 {
    height: calc(var(--spacing) * 4000);
  }
  .w-1\/1 {
    width: calc(1/1 * 100%);
  }
  .w-1\/2 {
    width: calc(1/2 * 100%);
  }
  .w-1\/4 {
    width: calc(1/4 * 100%);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-2\/5 {
    width: calc(2/5 * 100%);
  }
  .w-3\/2 {
    width: calc(3/2 * 100%);
  }
  .w-3\/4 {
    width: calc(3/4 * 100%);
  }
  .w-5\/6 {
    width: calc(5/6 * 100%);
  }
  .w-11\/12 {
    width: calc(11/12 * 100%);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-70 {
    width: calc(var(--spacing) * 70);
  }
  .w-100 {
    width: calc(var(--spacing) * 100);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .w-max {
    width: max-content;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-\[500px\] {
    max-width: 500px;
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .flex-1\/2 {
    flex: calc(1/2 * 100%);
  }
  .-translate-x-30 {
    --tw-translate-x: calc(var(--spacing) * -30);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-30 {
    --tw-translate-x: calc(var(--spacing) * 30);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-10 {
    --tw-translate-y: calc(var(--spacing) * -10);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .items-center-safe {
    align-items: safe center;
  }
  .items-end {
    align-items: flex-end;
  }
  .items-end-safe {
    align-items: safe flex-end;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-clip {
    overflow: clip;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .bg-\[\#e3e2e2\] {
    background-color: #e3e2e2;
  }
  .bg-amber-700 {
    background-color: var(--color-amber-700);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-400 {
    background-color: var(--color-gray-400);
  }
  .bg-neutral-800 {
    background-color: var(--color-neutral-800);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-auto {
    background-size: auto;
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-15 {
    padding-top: calc(var(--spacing) * 15);
  }
  .pt-30 {
    padding-top: calc(var(--spacing) * 30);
  }
  .pr-0 {
    padding-right: calc(var(--spacing) * 0);
  }
  .pl-0 {
    padding-left: calc(var(--spacing) * 0);
  }
  .text-center {
    text-align: center;
  }
  .text-end {
    text-align: end;
  }
  .text-start {
    text-align: start;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-white {
    color: var(--color-white);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-black {
    --tw-shadow-color: #000;
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-black) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-red-500 {
    --tw-shadow-color: oklch(63.7% 0.237 25.331);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, var(--color-red-500) var(--tw-shadow-alpha), transparent);
    }
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .text-shadow-stone-900 {
    --tw-text-shadow-color: oklch(21.6% 0.006 56.043);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-text-shadow-color: color-mix(in oklab, var(--color-stone-900) var(--tw-text-shadow-alpha), transparent);
    }
  }
  .hover\:translate-3 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 3);
        --tw-translate-y: calc(var(--spacing) * 3);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-6 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 6);
        --tw-translate-y: calc(var(--spacing) * 6);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-x-4 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * -4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-x-3 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 3);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-x-4 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 4);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-x-5 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-x-6 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 6);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-x-7 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 7);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-x-8 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 8);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-x-10 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 10);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:translate-x-15 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 15);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-3 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -3);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:scale-110 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:cursor-pointer {
    &:hover {
      @media (hover: hover) {
        cursor: pointer;
      }
    }
  }
  .hover\:bg-black {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-black);
      }
    }
  }
  .hover\:bg-white {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-white);
      }
    }
  }
  .hover\:text-red-500 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-500);
      }
    }
  }
  .hover\:text-red-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-600);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:shadow-2xl {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, rgb(0 0 0 / 0.25));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-xl {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 8px 10px -6px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .sm\:mb-50 {
    @media (width >= 40rem) {
      margin-bottom: calc(var(--spacing) * 50);
    }
  }
  .sm\:ml-70 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 70);
    }
  }
  .sm\:translate-x-1 {
    @media (width >= 40rem) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .sm\:flex-col {
    @media (width >= 40rem) {
      flex-direction: column;
    }
  }
  .sm\:text-center {
    @media (width >= 40rem) {
      text-align: center;
    }
  }
  .md\:container {
    @media (width >= 48rem) {
      width: 100%;
      @media (width >= 40rem) {
        max-width: 40rem;
      }
      @media (width >= 48rem) {
        max-width: 48rem;
      }
      @media (width >= 64rem) {
        max-width: 64rem;
      }
      @media (width >= 80rem) {
        max-width: 80rem;
      }
      @media (width >= 96rem) {
        max-width: 96rem;
      }
    }
  }
  .md\:-m-20 {
    @media (width >= 48rem) {
      margin: calc(var(--spacing) * -20);
    }
  }
  .md\:-m-25 {
    @media (width >= 48rem) {
      margin: calc(var(--spacing) * -25);
    }
  }
  .md\:-m-40 {
    @media (width >= 48rem) {
      margin: calc(var(--spacing) * -40);
    }
  }
  .md\:-m-60 {
    @media (width >= 48rem) {
      margin: calc(var(--spacing) * -60);
    }
  }
  .md\:m-0 {
    @media (width >= 48rem) {
      margin: calc(var(--spacing) * 0);
    }
  }
  .md\:m-10 {
    @media (width >= 48rem) {
      margin: calc(var(--spacing) * 10);
    }
  }
  .md\:mx-auto {
    @media (width >= 48rem) {
      margin-inline: auto;
    }
  }
  .md\:-mt-10 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -10);
    }
  }
  .md\:-mt-12 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -12);
    }
  }
  .md\:-mt-20 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -20);
    }
  }
  .md\:-mt-25 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -25);
    }
  }
  .md\:-mt-27 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -27);
    }
  }
  .md\:-mt-29 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -29);
    }
  }
  .md\:-mt-30 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -30);
    }
  }
  .md\:-mt-35 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -35);
    }
  }
  .md\:-mt-40 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -40);
    }
  }
  .md\:-mt-50 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -50);
    }
  }
  .md\:-mt-60 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -60);
    }
  }
  .md\:-mt-600 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * -600);
    }
  }
  .md\:mt-3 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 3);
    }
  }
  .md\:mt-5 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 5);
    }
  }
  .md\:mt-10 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 10);
    }
  }
  .md\:mt-15 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 15);
    }
  }
  .md\:mt-20 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 20);
    }
  }
  .md\:mt-30 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 30);
    }
  }
  .md\:mt-35 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 35);
    }
  }
  .md\:mt-40 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 40);
    }
  }
  .md\:mt-50 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 50);
    }
  }
  .md\:mt-130 {
    @media (width >= 48rem) {
      margin-top: calc(var(--spacing) * 130);
    }
  }
  .md\:mr-10 {
    @media (width >= 48rem) {
      margin-right: calc(var(--spacing) * 10);
    }
  }
  .md\:mr-20 {
    @media (width >= 48rem) {
      margin-right: calc(var(--spacing) * 20);
    }
  }
  .md\:mr-200 {
    @media (width >= 48rem) {
      margin-right: calc(var(--spacing) * 200);
    }
  }
  .md\:mb-15 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 15);
    }
  }
  .md\:mb-20 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 20);
    }
  }
  .md\:mb-25 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 25);
    }
  }
  .md\:mb-40 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 40);
    }
  }
  .md\:ml-10 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 10);
    }
  }
  .md\:ml-20 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 20);
    }
  }
  .md\:ml-25 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 25);
    }
  }
  .md\:ml-30 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 30);
    }
  }
  .md\:ml-50 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 50);
    }
  }
  .md\:ml-60 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 60);
    }
  }
  .md\:ml-70 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 70);
    }
  }
  .md\:ml-100 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 100);
    }
  }
  .md\:ml-200 {
    @media (width >= 48rem) {
      margin-left: calc(var(--spacing) * 200);
    }
  }
  .md\:ml-auto {
    @media (width >= 48rem) {
      margin-left: auto;
    }
  }
  .md\:box-border {
    @media (width >= 48rem) {
      box-sizing: border-box;
    }
  }
  .md\:w-1\/2 {
    @media (width >= 48rem) {
      width: calc(1/2 * 100%);
    }
  }
  .md\:w-2\/5 {
    @media (width >= 48rem) {
      width: calc(2/5 * 100%);
    }
  }
  .md\:w-35\/100 {
    @media (width >= 48rem) {
      width: calc(35/100 * 100%);
    }
  }
  .md\:w-40\/100 {
    @media (width >= 48rem) {
      width: calc(40/100 * 100%);
    }
  }
  .md\:w-45\/100 {
    @media (width >= 48rem) {
      width: calc(45/100 * 100%);
    }
  }
  .md\:w-full {
    @media (width >= 48rem) {
      width: 100%;
    }
  }
  .md\:w-max {
    @media (width >= 48rem) {
      width: max-content;
    }
  }
  .md\:max-w-1\/2 {
    @media (width >= 48rem) {
      max-width: calc(1/2 * 100%);
    }
  }
  .md\:max-w-1\/3 {
    @media (width >= 48rem) {
      max-width: calc(1/3 * 100%);
    }
  }
  .md\:max-w-1\/4 {
    @media (width >= 48rem) {
      max-width: calc(1/4 * 100%);
    }
  }
  .md\:max-w-32 {
    @media (width >= 48rem) {
      max-width: calc(var(--spacing) * 32);
    }
  }
  .md\:translate-6 {
    @media (width >= 48rem) {
      --tw-translate-x: calc(var(--spacing) * 6);
      --tw-translate-y: calc(var(--spacing) * 6);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:-translate-x-30 {
    @media (width >= 48rem) {
      --tw-translate-x: calc(var(--spacing) * -30);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:translate-x-1\/3 {
    @media (width >= 48rem) {
      --tw-translate-x: calc(1/3 * 100%);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:translate-x-30 {
    @media (width >= 48rem) {
      --tw-translate-x: calc(var(--spacing) * 30);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:translate-x-40 {
    @media (width >= 48rem) {
      --tw-translate-x: calc(var(--spacing) * 40);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:-translate-y-0\.5 {
    @media (width >= 48rem) {
      --tw-translate-y: calc(var(--spacing) * -0.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:-translate-y-10 {
    @media (width >= 48rem) {
      --tw-translate-y: calc(var(--spacing) * -10);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .md\:flex-col {
    @media (width >= 48rem) {
      flex-direction: column;
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:justify-center {
    @media (width >= 48rem) {
      justify-content: center;
    }
  }
  .md\:justify-end {
    @media (width >= 48rem) {
      justify-content: flex-end;
    }
  }
  .md\:justify-start {
    @media (width >= 48rem) {
      justify-content: flex-start;
    }
  }
  .md\:space-y-0 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .md\:space-x-2 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-x-reverse: 0;
        margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
        margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
      }
    }
  }
  .md\:p-35 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 35);
    }
  }
  .md\:pt-20 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 20);
    }
  }
  .md\:pt-35 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 35);
    }
  }
  .md\:pt-50 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 50);
    }
  }
  .md\:pt-65 {
    @media (width >= 48rem) {
      padding-top: calc(var(--spacing) * 65);
    }
  }
  .md\:pb-30 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 30);
    }
  }
  .md\:pb-40 {
    @media (width >= 48rem) {
      padding-bottom: calc(var(--spacing) * 40);
    }
  }
  .md\:pl-15 {
    @media (width >= 48rem) {
      padding-left: calc(var(--spacing) * 15);
    }
  }
  .md\:pl-25 {
    @media (width >= 48rem) {
      padding-left: calc(var(--spacing) * 25);
    }
  }
  .md\:pl-35 {
    @media (width >= 48rem) {
      padding-left: calc(var(--spacing) * 35);
    }
  }
  .md\:text-center {
    @media (width >= 48rem) {
      text-align: center;
    }
  }
  .lg\:ml-70 {
    @media (width >= 64rem) {
      margin-left: calc(var(--spacing) * 70);
    }
  }
  .lg\:flex {
    @media (width >= 64rem) {
      display: flex;
    }
  }
  .lg\:max-w-max {
    @media (width >= 64rem) {
      max-width: max-content;
    }
  }
  .lg\:translate-x-1\/6 {
    @media (width >= 64rem) {
      --tw-translate-x: calc(1/6 * 100%);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .lg\:-translate-y-10 {
    @media (width >= 64rem) {
      --tw-translate-y: calc(var(--spacing) * -10);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .lg\:items-center {
    @media (width >= 64rem) {
      align-items: center;
    }
  }
  .xl\:flex {
    @media (width >= 80rem) {
      display: flex;
    }
  }
}
@layer base {
  @font-face {
    font-family: 'FontA';
    font-weight: 600;
    src: url('/src/assets/fonts/LTSuperior-SemiBold.otf') format('opentype');
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-text-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-text-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-text-shadow-color: initial;
      --tw-text-shadow-alpha: 100%;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-space-x-reverse: 0;
    }
  }
}
